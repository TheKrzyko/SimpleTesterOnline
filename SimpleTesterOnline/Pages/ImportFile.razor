@page "/"
@inject IFileReaderService fileReaderService
@inject LocalAppStorage localStorage
@using QuizData
<MatHeadline4>SimpleTesterOnline</MatHeadline4>
<MatBlazor.MatDivider/>
<p class="border-info">Załaduj plik z pytaniami</p>

<input type="file" @ref="inputFileReference" @onchange="OnFileChanged"/>

<div>
    
    @if (quiz != null)
    {
        <QuestionComponent question="quiz.questions[0]" />
    }
    
</div>
@code{
    ElementReference inputFileReference;

    private Quiz quiz { get; set; } = null;

    IFileReaderRef fileReaderReference;


    protected override void OnAfterRender(bool isFirstRender)
    {
        if(isFirstRender)
            fileReaderReference = fileReaderService.CreateReference(inputFileReference);
    }

    async Task OnFileChanged()
    {


        var files = (await fileReaderReference.EnumerateFilesAsync()).ToList();
        var file = files.First();
        var parser = new DefaultQuizParser();
        var fileInfo = await file.ReadFileInfoAsync();
        quiz = parser.Load(await file.CreateMemoryStreamAsync());
        quiz.fileName = fileInfo.Name;
        localStorage.quiz = quiz;
        

        this.StateHasChanged();
    }

    protected override void OnInitialized()
    {
        localStorage.onQuizChange += this.StateHasChanged;
        quiz = localStorage.quiz;
        base.OnInitialized();
    }

}